{"version":3,"sources":["./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/services/contact.service.ts","./src/environments/environment.ts","./src/app/auth.interceptor.ts","./src/app/components/contact/contact.component.ts","./src/app/components/contact/contact.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/services/link.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/person.service.ts","./src/app/services/document.service.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/app.module.ts","./src/app/components/student-documents/student-documents.component.ts","./src/app/components/student-documents/student-documents.component.html","./src/app/components/admin/admin.component.ts","./src/app/components/admin/admin.component.html","./src/app/components/student-links/student-links.component.ts","./src/app/components/student-links/student-links.component.html","./src/app/services/refresh.service.ts","./src/app/components/person-data/person-data.component.ts","./src/app/components/person-data/person-data.component.html","./src/app/services/auth.service.ts","./src/app/services/token.service.ts","./src/app/app-routing.module.ts","./src/app/components/globallinks/globallinks.component.ts","./src/app/components/globallinks/globallinks.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { MenuItem, PrimeIcons } from 'primeng/api';\nimport { RefreshService } from 'src/app/services/refresh.service';\nimport { TokenService } from \"src/app/services/token.service\";\nimport { Faculty } from 'src/app/classes/faculty';\nimport { PersonService } from 'src/app/services/person.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  title: string;\n  items: MenuItem[];\n  isLoggedIn: boolean;\n  isAdmin: boolean;\n  faculty: Faculty;\n  messageReceived: any;\n  private subscription: Subscription;\n\n  constructor(private tokenService: TokenService, private router: Router, private refreshService: RefreshService,\n    private personService: PersonService) {\n    this.title = \"Študentský portál\";\n    this.subscription = this.refreshService.notifyLoginObservable$.subscribe((res) => {\n      if (res.hasOwnProperty('option') && res.option === 'onSubmit') {\n        this.isLoggedIn = true;\n        this.ngOnInit();\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.items = [\n      { label: 'Osobné údaje', icon: PrimeIcons.USER, routerLink: ['/personData'] },\n      { label: 'Kontakty', icon: PrimeIcons.PHONE, routerLink: ['/contacts'] },\n      { label: 'Odkazy', icon: PrimeIcons.WIFI, routerLink: ['/links'] },\n      { label: 'Dokumenty', icon: PrimeIcons.BRIEFCASE, routerLink: ['/documents'] },\n      {\n        label: 'Odhlásenie', icon: PrimeIcons.SIGN_OUT, command: (event) => {\n          this.logout();\n        }\n      }\n    ];\n    if (this.isLoggedIn) {\n      this.personService.getFacultyInformation().subscribe(data => { this.faculty = data });\n      const user = this.tokenService.getUser();\n      this.isAdmin = user.role == \"ADMIN\";\n    }\n  }\n\n  logout(): void {\n    this.router.navigate([\"login\"]);\n    this.tokenService.signOut();\n    this.isLoggedIn = false;\n    this.refreshService.notifyOtherLogout({option: 'onSubmit', value: 'login'});\n  }\n\n}\n","<div class=\"hidden-sm p-grid p-jc-center\">\n    <div class=\"p-md-2 p-lg-1 p-d-flex p-jc-center p-ai-center\">\n        <a href=\"https://uniza.sk/\"><img src=\"assets/images/logoUniza.jpg\"></a>\n    </div>\n    <div class=\"p-md-8 p-lg-8 p-d-flex p-jc-center p-ai-center\">\n        <div class=\"p-text-center\">\n            <h1 class=\"title\">{{title}}</h1>\n            <div *ngIf=\"isLoggedIn && !isAdmin\">\n                <div class=\"hidden-lg\">\n                    <button type=\"button\" pButton icon=\"pi pi-bars\" label=\"Menu\" (click)=\"menu.toggle($event)\"></button>\n                    <p-menu #menu [popup]=\"true\" [model]=\"items\"></p-menu>\n                </div>\n                <div class=\"hidden-md\">\n                    <p-tabMenu [model]=\"items\"></p-tabMenu>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"p-md-2 p-lg-1 p-d-flex p-jc-center p-ai-center\">\n        <div *ngIf=\"isLoggedIn && !isAdmin\">\n            <a [href]=\"faculty?.website\"><img [src]=\"faculty?.logoByteUrl\"></a>\n        </div>\n    </div>\n</div>\n<div class=\"hidden-md hidden-lg p-grid p-jc-center\">\n    <div class=\"p-col-12 p-d-flex p-jc-center p-ai-center\">\n        <h1 class=\"title\">{{title}}</h1>\n    </div>\n    <div class=\"p-col-3 p-d-flex p-jc-center p-ai-center\">\n        <a href=\"https://uniza.sk/\"><img src=\"assets/images/logoUniza.jpg\"></a>\n    </div>\n    <div *ngIf=\"isLoggedIn && !isAdmin\" class=\"p-col-3 p-d-flex p-jc-center p-ai-center\">\n        <div>\n            <a [href]=\"faculty?.website\"><img [src]=\"faculty?.logoByteUrl\"></a>\n        </div>\n    </div>\n    <div *ngIf=\"isLoggedIn && !isAdmin\" class=\"p-col-12 p-d-flex p-jc-center p-ai-center\">\n        <div class=\"p-text-center p-jc-center\">\n            <button type=\"button\" pButton icon=\"pi pi-bars\" label=\"Menu\" (click)=\"menu.toggle($event)\"></button>\n            <p-menu #menu [popup]=\"true\" [model]=\"items\"></p-menu>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Contact } from \"src/app/classes/contact\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n\n  private baseUrl = 'http://localhost:8080/contact/';\n\n  constructor(private http: HttpClient) { }\n\n  getContacts(): Observable<Contact[]> {\n    return this.http.get<Contact[]>(this.baseUrl);\n  }\n\n  updateContacts(contacts: Contact[]): Observable<Contact[]> {\n    return this.http.put<Contact[]>(this.baseUrl, contacts);\n  }\n\n  createContact(contact: Contact): Observable<Contact> {\n    return this.http.post<Contact>(this.baseUrl, contact);\n  }\n\n  deleteContact(contact: Contact): Observable<Contact> {\n    return this.http.delete<Contact>(this.baseUrl + \"delete/\" + contact.id.toString());\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HTTP_INTERCEPTORS, HttpEvent } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\n\r\nimport { TokenService } from \"./services/token.service\";\r\nimport { Observable } from 'rxjs';\r\n\r\nconst TOKEN_HEADER_KEY = 'Authorization';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private token: TokenService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let authReq = req;\r\n    const token = this.token.getToken();\r\n    if (token != null) {\r\n      authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\r\n    }\r\n    return next.handle(authReq);\r\n  }\r\n}\r\n\r\nexport const authInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n];","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Contact } from \"src/app/classes/contact\";\nimport { ContactService } from \"src/app/services/contact.service\";\nimport { TokenService } from 'src/app/services/token.service';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  personContacts: Contact[];\n  savedContacts: Contact[];\n\n  rowGroupMetadataPerson: any;\n  rowGroupMetadataSaved: any;\n\n  displayDialog: boolean;\n  contactDialog: Contact;\n\n  clonedContacts: Contact[];\n\n  constructor(private contactService: ContactService, private tokenService: TokenService, private router: Router) { }\n\n  ngOnInit(): void {\n    if (this.tokenService.getToken() == null) {\n      this.router.navigate([\"login\"])\n    }\n    this.contactService.getContacts().subscribe(data => {\n      this.personContacts = data.filter(c => c.personContact);\n      this.savedContacts = data.filter(c => !c.personContact);\n    });\n    this.updateRowGroupMetaDataPerson();\n    this.updateRowGroupMetaDataSaved();\n  }\n\n  onSortPerson() {\n    this.updateRowGroupMetaDataPerson();\n  }\n\n  onSortSaved() {\n    this.updateRowGroupMetaDataSaved();\n  }\n\n  updateRowGroupMetaDataPerson() {\n    this.rowGroupMetadataPerson = {};\n    if (this.personContacts) {\n      for (let i = 0; i < this.personContacts.length; i++) {\n        let rowData = this.personContacts[i];\n        let type = rowData.type;\n        if (i == 0) {\n          this.rowGroupMetadataPerson[type] = { index: 0, size: 1 };\n        }\n        else {\n          let previousRowData = this.personContacts[i - 1];\n          let previousRowGroup = previousRowData.type;\n          if (type === previousRowGroup)\n            this.rowGroupMetadataPerson[type].size++;\n          else\n            this.rowGroupMetadataPerson[type] = { index: i, size: 1 };\n        }\n      }\n    }\n  }\n\n  updateRowGroupMetaDataSaved() {\n    this.rowGroupMetadataSaved = {};\n    if (this.savedContacts) {\n      for (let i = 0; i < this.savedContacts.length; i++) {\n        let rowData = this.savedContacts[i];\n        let type = rowData.type;\n        if (i == 0) {\n          this.rowGroupMetadataSaved[type] = { index: 0, size: 1 };\n        }\n        else {\n          let previousRowData = this.savedContacts[i - 1];\n          let previousRowGroup = previousRowData.type;\n          if (type === previousRowGroup)\n            this.rowGroupMetadataSaved[type].size++;\n          else\n            this.rowGroupMetadataSaved[type] = { index: i, size: 1 };\n        }\n      }\n    }\n  }\n\n  getSectionHeaderName(type: string): string {\n    switch (type) {\n      case \"BANKNUMBER\":\n        return \"Číslo bankového účtu\";\n      case \"PHONENUMBER\":\n        return \"Telefónne číslo\";\n      case \"EMAIL\":\n        return \"Emailová adresa\";\n    }\n  }\n\n  onEditInit(isPerson: boolean): void {\n    this.clonedContacts = isPerson ? this.personContacts : this.savedContacts;\n  }\n\n  onEditComplete(): void {\n    this.contactService.updateContacts(this.clonedContacts)\n      .subscribe(data => {\n        this.ngOnInit();\n      });\n  }\n\n  onEditCancel(isPerson: boolean): void {\n    isPerson ? this.personContacts : this.savedContacts = this.clonedContacts;\n  }\n\n  deleteContact(contact: Contact) {\n    this.contactService.deleteContact(contact)\n      .subscribe(data => {\n        this.ngOnInit();\n      });\n\n  }\n\n  onContactAdd(contactType: string, isPerson: boolean) {\n    this.contactDialog = { id: null, contactValue: null, description: null, type: contactType, personContact: isPerson };\n    this.displayDialog = true;\n  }\n\n  saveContact() {\n    this.contactService.createContact(this.contactDialog)\n      .subscribe(data => {\n        this.ngOnInit();\n      });\n    this.displayDialog = false;\n  }\n}\n","<div class=\"p-grid\">\n    <div class=\"p-col-12 p-lg-4 p-jc-center\">\n        <p-panel [toggleable]=\"true\" [collapsed]=\"false\" header=\"Kontakty na mňa\">\n            <p-table [value]=\"personContacts\" dataKey=\"id\" sortField=\"type\" sortMode=\"single\" [autoLayout]=\"true\"\n                (onSort)=\"onSortPerson()\" (onEditInit)=\"onEditInit(true)\" (onEditCancel)=\"onEditCancel(true)\"\n                (onEditComplete)=\"onEditComplete()\">\n                <ng-template pTemplate=\"body\" let-contact let-rowIndex=\"rowIndex\">\n                    <tr *ngIf=\"rowGroupMetadataPerson[contact.type].index === rowIndex\">\n                        <td colspan=\"2\">\n                            <span class=\"p-text-bold p-ml-2\">{{getSectionHeaderName(contact.type)}}</span>\n                            <button pButton type=\"button\" icon=\"pi pi-plus-circle\"\n                                class=\"p-button-rounded p-button-success p-button-text\" label=\" \"\n                                (click)=\"onContactAdd(contact.type, contact.personContact)\">\n                            </button>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td pEditableColumn>\n                            <p-cellEditor>\n                                <ng-template pTemplate=\"input\">\n                                    <input pInputText type=\"text\" [(ngModel)]=\"contact.contactValue\">\n                                </ng-template>\n                                <ng-template pTemplate=\"output\">\n                                    {{contact.contactValue}}\n                                </ng-template>\n                            </p-cellEditor>\n                        </td>\n                        <td style=\"text-align:right\">\n                            <button type=\"button\" pButton icon=\"pi pi-trash\"\n                                class=\"p-button-sm p-button-rounded p-button-danger p-button-text\" label=\" \"\n                                (click)=\"deleteContact(contact)\">\n                            </button>\n                        </td>\n                    </tr>\n                </ng-template>\n            </p-table>\n        </p-panel>\n    </div>\n    <div class=\"p-col-12 p-lg-8 p-jc-center\">\n        <p-panel [toggleable]=\"true\" [collapsed]=\"false\" header=\"Uložené kontakty\">\n            <p-table [value]=\"savedContacts\" dataKey=\"id\" sortField=\"type\" sortMode=\"single\" [autoLayout]=\"true\"\n                (onSort)=\"onSortSaved()\" (onEditInit)=\"onEditInit(false)\" (onEditCancel)=\"onEditCancel(false)\"\n                (onEditComplete)=\"onEditComplete()\">\n                <ng-template pTemplate=\"body\" let-contact let-rowIndex=\"rowIndex\">\n                    <tr *ngIf=\"rowGroupMetadataSaved[contact.type].index === rowIndex\">\n                        <td colspan=\"3\">\n                            <span class=\"p-text-bold p-ml-2\">{{getSectionHeaderName(contact.type)}}</span>\n                            <button pButton type=\"button\" icon=\"pi pi-plus-circle\"\n                                class=\"p-button-rounded p-button-success p-button-text\" label=\" \"\n                                (click)=\"onContactAdd(contact.type, contact.personContact)\">\n                            </button>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td pEditableColumn>\n                            <p-cellEditor>\n                                <ng-template pTemplate=\"input\">\n                                    <input pInputText type=\"text\" [(ngModel)]=\"contact.contactValue\">\n                                </ng-template>\n                                <ng-template pTemplate=\"output\">\n                                    {{contact.contactValue}}\n                                </ng-template>\n                            </p-cellEditor>\n                        </td>\n                        <td pEditableColumn>\n                            <p-cellEditor>\n                                <ng-template pTemplate=\"input\">\n                                    <input pInputText type=\"text\" [(ngModel)]=\"contact.description\">\n                                </ng-template>\n                                <ng-template pTemplate=\"output\">\n                                    {{contact.description}}\n                                </ng-template>\n                            </p-cellEditor>\n                        </td>\n                        <td style=\"text-align:right\">\n                            <button type=\"button\" pButton icon=\"pi pi-trash\"\n                                class=\"p-button-sm p-button-rounded p-button-danger p-button-text\" label=\" \"\n                                (click)=\"deleteContact(contact)\"></button>\n                        </td>\n                    </tr>\n                </ng-template>\n            </p-table>\n        </p-panel>\n    </div>\n</div>\n<p-dialog [(visible)]=\"displayDialog\" [responsive]=\"true\" showEffect=\"fade\" [modal]=\"true\">\n    <form #LinkForm=\"ngForm\" novalidate>\n        <div class=\"ui-grid ui-grid-responsive ui-fluid\" *ngIf=\"contactDialog\">\n            <div class=\"ui-g ui-g-12 ui-g-nopad\">\n                <div class=\"ui-g-12 ui-md-3 ui-label\">\n                    <label for=\"link\">Kontakt</label>\n                </div>\n                <div class=\"ui-g-12 ui-md-9\">\n                    <input pInputText id=\"link\" name=\"link\" required [(ngModel)]=\"contactDialog.contactValue\" />\n                </div>\n                <div *ngIf=\"!contactDialog.personContact\" class=\"ui-g-12 ui-md-3 ui-label\">\n                    <label for=\"description\">Popis</label>\n                </div>\n                <div *ngIf=\"!contactDialog.personContact\" class=\"ui-g-12 ui-md-9\">\n                    <input pInputText id=\"description\" name=\"description\" [(ngModel)]=\"contactDialog.description\" />\n                </div>\n            </div>\n        </div>\n    </form>\n    <p-footer>\n        <div class=\"ui-dialog-buttonpane ui-helper-clearfix\">\n            <button type=\"submit\" pButton icon=\"pi pi-check\" (click)=\"saveContact()\" label=\"Ulož\"\n                [disabled]=\"!LinkForm.form.valid\"></button>\n        </div>\n    </p-footer>\n</p-dialog>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"p-d-flex p-jc-center\">\n    <i>© Martina Černeková 2021</i>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Link } from \"src/app/classes/link\";\nimport { Globallink } from 'src/app/classes/globallink';\nimport { Persongloballink } from 'src/app/classes/persongloballink';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LinkService {\n\n  private baseUrl = 'http://localhost:8080/link/';\n\n  constructor(private http: HttpClient) { }\n\n  getLinks(): Observable<Link[]> {\n    return this.http.get<Link[]>(this.baseUrl);\n  }\n\n  updateLink(link: Link): Observable<Link> {\n    return this.http.put<Link>(this.baseUrl, link);\n  }\n\n  createLink(link: Link): Observable<Link> {\n    return this.http.post<Link>(this.baseUrl, link);\n  }\n\n  deleteLink(link: Link): Observable<Link> {\n    return this.http.delete<Link>(this.baseUrl + \"delete/\" + link.id.toString());\n  }\n\n  getGlobalLinks(): Observable<Globallink[]> {\n    return this.http.get<Globallink[]>(this.baseUrl + \"globalLinks\")\n  }\n\n  getGlobalFacultyLinks(): Observable<Globallink[]> {\n    return this.http.get<Globallink[]>(this.baseUrl + \"globalFacultyLinks\")\n  }\n\n  getGlobalDocumentLinks(): Observable<Globallink[]> {\n    return this.http.get<Globallink[]>(this.baseUrl + \"globalDocumentLinks\")\n  }\n\n  getGlobalPersonLinks(): Observable<Persongloballink[]> {\n    return this.http.get<Persongloballink[]>(this.baseUrl + \"globalPersonLinks\")\n  }\n\n  createUpdateGlobalPersonLink(link: Persongloballink): Observable<Persongloballink> {\n    return this.http.post<Persongloballink>(this.baseUrl + \"createUpdateGlobalPersonLink\", link);\n  }\n\n  deleteGlobalPersonLink(link: Persongloballink): Observable<Persongloballink> {\n    return this.http.delete<Persongloballink>(this.baseUrl + \"deleteGlobalPersonLink/\" + link.id.toString());\n  }\n}\n","import { Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title = 'client';\n\n  constructor() { }\n\n}\n","<app-header></app-header>\n<p-divider></p-divider>\n<div class=\"p-grid\">\n  <div class=\"p-col-12 p-md-4 p-lg-2 p-jc-center\">\n    <app-globallinks></app-globallinks>\n  </div>\n  <div class=\"p-col-12 p-md-8 p-lg-10 p-jc-center\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n<p-divider></p-divider>\n<app-footer></app-footer>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Person } from \"src/app/classes/person\";\nimport { Faculty } from \"src/app/classes/faculty\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersonService {\n\n  private baseUrl = 'http://localhost:8080/person/';\n\n  constructor(private http: HttpClient) { }\n\n  getPerson(): Observable<Person> {\n    return this.http.get<Person>(this.baseUrl);\n  }\n\n  async uploadProfilePhoto(file: File): Promise<string> {\n    var fileData = await this.pFileReader(file);\n    return this.http.post<string>(this.baseUrl, fileData).toPromise();\n  }\n\n  pFileReader(file) {\n    return new Promise((resolve, reject) => {\n      var reader = new FileReader()\n      reader.onload = function found() {\n        resolve(reader.result)\n      }\n      reader.readAsDataURL(file)\n    })\n  }\n\n  deleteProfilePhoto(): Observable<Person> {\n    return this.http.delete<Person>(this.baseUrl);\n  }\n\n  getFacultyInformation(): Observable<Faculty> {\n    return this.http.get<Faculty>(this.baseUrl + \"faculty\")\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpEvent, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Document } from \"src/app/classes/document\";\nimport { Fileupload } from 'src/app/classes/fileupload';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DocumentService {\n\n  private baseUrl = 'http://localhost:8080/document/';\n  data: Fileupload;\n\n  constructor(private http: HttpClient) { }\n\n  getDocuments(): Observable<Document[]> {\n    return this.http.get<Document[]>(this.baseUrl);\n  }\n\n  async saveDocument(file: File): Promise<string> {\n    var fileData = await this.pFileReader(file);\n    this.data = {data: fileData, filename: file.name};\n    return this.http.post<string>(this.baseUrl, this.data).toPromise();\n  }\n\n  updateDocument(document: Document): Observable<Document> {\n    return this.http.put<Document>(this.baseUrl, document);\n  }\n\n  deleteDocument(document: Document): Observable<Document> {\n    return this.http.delete<Document>(this.baseUrl + \"delete/\" + document.id.toString());\n  }\n\n  downloadDocument(document: Document): Observable<Document> {\n    return this.http.get<Document>(this.baseUrl + \"download/\" + document.id.toString());\n  }\n\n  pFileReader (file) {\n    return new Promise<string>((resolve, reject) => {\n      var reader = new FileReader()\n      reader.onload = function found () {\n        resolve(reader.result.toString())\n      }\n      reader.readAsDataURL(file)\n    })\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from \"src/app/services/auth.service\";\nimport { Credentials } from 'src/app/classes/credentials';\nimport { RefreshService } from 'src/app/services/refresh.service';\nimport { TokenService } from \"src/app/services/token.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\n\nexport class LoginComponent implements OnInit {\n\n  loginForm: Credentials;\n  isLoggedIn: boolean;\n  loginError: boolean;\n\n  constructor(private authService: AuthService, private tokenService: TokenService, private router: Router,\n    private refreshService: RefreshService) { }\n\n  ngOnInit(): void {\n    if (this.tokenService.getToken()) {\n      // this.tokenService.signOut();\n      // this.refreshService.notifyOtherLogout({ option: 'onSubmit', value: 'login' });\n      this.isLoggedIn = false;\n      // window.location.reload();\n    }\n    this.loginForm = { username: null, password: null };\n  }\n\n  onSubmit(): void {\n    this.authService.login(this.loginForm).subscribe(\n      data => {\n        this.tokenService.saveToken(data.token);\n        this.tokenService.saveUser(data);\n        this.isLoggedIn = true;\n        this.loginError = false;\n        if (data.role == \"ADMIN\") {\n          this.router.navigate(['admin']);\n        }\n        else {\n          this.router.navigate(['personData']);\n          this.refreshService.notifyOtherLogin({ option: 'onSubmit', value: 'login' });\n        }\n      },\n      err => {\n        this.loginError = true;\n        this.ngOnInit();\n      }\n    );\n  }\n\n}\n","<div class=\"p-d-flex p-jc-center\">\n  <div class=\"p-text-center\">\n    <p-card>\n      <p-messages *ngIf=\"loginError\" severity=\"error\">\n        <ng-template pTemplate>\n          <div>Nesprávne meno alebo heslo!</div>\n        </ng-template>\n      </p-messages>\n      <form #LinkForm=\"ngForm\" novalidate>\n        <div class=\"ui-grid ui-grid-responsive ui-fluid\" *ngIf=\"loginForm\">\n          <div class=\"ui-g ui-g-12 ui-g-nopad\">\n            <div class=\"ui-g-12 ui-md-3 ui-label\">\n              <label for=\"username\">Meno</label>\n            </div>\n            <div class=\"ui-g-12 ui-md-9\">\n              <input pInputText id=\"username\" name=\"username\" type=\"text\" required [(ngModel)]=\"loginForm.username\" />\n            </div>\n            <div class=\"ui-g-12 ui-md-3 ui-label\">\n              <label for=\"password\">Heslo</label>\n            </div>\n            <div class=\"ui-g-12 ui-md-9\">\n              <input pInputText id=\"password\" name=\"password\" type=\"password\" required\n                [(ngModel)]=\"loginForm.password\" />\n            </div>\n          </div>\n        </div>\n      </form>\n      <br>\n      <div class=\"ui-dialog-buttonpane ui-helper-clearfix\">\n        <button type=\"submit\" pButton icon=\"pi pi-sign-in\" (click)=\"onSubmit()\" label=\"Prihlás sa\"\n          [disabled]=\"!LinkForm.form.valid\"></button>\n      </div>\n    </p-card>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TableModule } from 'primeng/table';\nimport { MenuModule } from 'primeng/menu';\nimport { TabMenuModule } from 'primeng/tabmenu';\nimport { ButtonModule } from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\nimport { PanelModule } from \"primeng/panel\";\nimport { InputTextModule } from 'primeng/inputtext';\nimport { DividerModule } from 'primeng/divider';\nimport { PasswordModule } from 'primeng/password';\nimport { CardModule } from 'primeng/card';\nimport { FileUploadModule } from 'primeng/fileupload';\nimport { MessagesModule } from 'primeng/messages';\nimport { MessageModule } from 'primeng/message';\nimport { TabViewModule } from 'primeng/tabview';\nimport { RippleModule } from 'primeng/ripple';\nimport { AppComponent } from './app.component';\nimport { PersonDataComponent } from './components/person-data/person-data.component';\nimport { StudentDocumentsComponent } from './components/student-documents/student-documents.component';\nimport { PersonService } from \"./services/person.service\";\nimport { StudentLinksComponent } from './components/student-links/student-links.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { authInterceptorProviders } from \"./auth.interceptor\";\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { ContactComponent } from './components/contact/contact.component';\nimport { GloballinksComponent } from './components/globallinks/globallinks.component';\nimport { AdminComponent } from './components/admin/admin.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PersonDataComponent,\n    StudentDocumentsComponent,\n    StudentLinksComponent,\n    LoginComponent,\n    HeaderComponent,\n    FooterComponent,\n    ContactComponent,\n    GloballinksComponent,\n    AdminComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    TableModule,\n    MenuModule,\n    TabMenuModule,\n    ButtonModule,\n    DialogModule,\n    PanelModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    InputTextModule,\n    PasswordModule,\n    DividerModule,\n    CardModule,\n    FileUploadModule,\n    MessageModule,\n    MessagesModule,\n    TabViewModule,\n    RippleModule\n  ],\n  providers: [PersonService, authInterceptorProviders],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Document } from \"src/app/classes/document\";\nimport { Router } from '@angular/router';\nimport { TokenService } from 'src/app/services/token.service';\nimport { DocumentService } from \"src/app/services/document.service\";\nimport { LinkService } from \"src/app/services/link.service\";\nimport { Globallink } from 'src/app/classes/globallink';\n\n@Component({\n  selector: 'app-student-documents',\n  templateUrl: './student-documents.component.html',\n  styleUrls: ['./student-documents.component.css']\n})\nexport class StudentDocumentsComponent implements OnInit {\n\n  documents: Document[];\n  uploadedDocument: File;\n  savedDocuments: Globallink[];\n  savedFacultyDocuments: Globallink[];\n\n  clonedDocuments: { [n: number]: Document; } = {};\n\n  constructor(private documentService: DocumentService, private linkService: LinkService,\n    private tokenService: TokenService, private router: Router) { }\n\n  ngOnInit(): void {\n    if (this.tokenService.getToken() == null) {\n      this.router.navigate([\"login\"])\n    }\n    this.documentService.getDocuments().subscribe(data => { this.documents = data; });\n    this.linkService.getGlobalDocumentLinks().subscribe(data => {\n      this.savedDocuments = data.filter(c => !c.hasFaculty);\n      this.savedFacultyDocuments = data.filter(c => c.hasFaculty);\n    });\n  }\n\n  onRowEditInit(document: Document) {\n    this.clonedDocuments[document.id] = { ...document };\n  }\n\n  onRowEditSave(document: Document) {\n    this.documentService.updateDocument(document)\n      .subscribe(data => {\n        this.ngOnInit();\n      });\n  }\n\n  onRowEditCancel(document: Document, index: number) {\n    this.documents[index] = this.clonedDocuments[document.id];\n    delete this.clonedDocuments[document.id];\n  }\n\n  deleteDocument(document: Document) {\n    this.documentService.deleteDocument(document)\n      .subscribe(data => {\n        this.ngOnInit();\n      });\n  }\n\n  downloadDocument(document: Document) {\n    this.documentService.downloadDocument(document)\n      .subscribe(data => {\n        this.ngOnInit();\n      });\n  }\n\n  onUpload(event) {\n    for (let file of event.files) {\n      this.uploadedDocument = file;\n    }\n    this.documentService.saveDocument(this.uploadedDocument)\n      .then(data => {\n        this.ngOnInit();\n      });\n  }\n}\n","<div class=\"p-grid\">\n    <div class=\"p-col-12 p-lg-9 p-jc-center\">\n        <p-panel [toggleable]=\"true\" [collapsed]=\"false\" header=\"Moje dokumenty\">\n            <p-table #docsDT [value]=\"documents\" dataKey=\"id\" editMode=\"row\"\n                [globalFilterFields]=\"['name','description']\">\n                <ng-template pTemplate=\"caption\">\n                    <div class=\"p-d-flex p-ai-center\">\n                        <p-fileUpload mode=\"basic\" name=\"demo[]\" customUpload=\"true\" (uploadHandler)=\"onUpload($event)\"\n                            styleClass=\"p-button-sm p-button-rounded p-button-success p-button-text\" [auto]=\"true\">\n                        </p-fileUpload>\n                        <span class=\"p-input-icon-left p-ml-auto\">\n                            <i class=\"pi pi-search\"></i>\n                            <input pInputText type=\"text\" (input)=\"docsDT.filterGlobal($event.target.value, 'contains')\"\n                                placeholder=\"Hľadaj\" />\n                        </span>\n                    </div>\n                </ng-template>\n                <ng-template pTemplate=\"header\">\n                    <tr>\n                        <th style=\"width: 10%\"></th>\n                        <th pSortableColumn=\"name\">Názov súboru<p-sortIcon field=\"name\"></p-sortIcon>\n                        </th>\n                        <th pSortableColumn=\"description\">Popis<p-sortIcon field=\"description\"></p-sortIcon>\n                        </th>\n                        <th pSortableColumn=\"modified\">Upravené<p-sortIcon field=\"modified\"></p-sortIcon>\n                        </th>\n                        <th style=\"width: 10%\"></th>\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-ri=\"rowIndex\">\n                    <tr [pEditableRow]=\"rowData\">\n                        <td style=\"text-align:center\">\n                            <button pButton pRipple type=\"button\" icon=\"pi pi-download\"\n                                (click)=\"downloadDocument(rowData)\"\n                                class=\"p-button-sm p-button-rounded p-button-success p-button-text\" label=\" \"></button>\n                        </td>\n                        <td>\n                            {{rowData.name}}\n                        </td>\n                        <td>\n                            <p-cellEditor>\n                                <ng-template pTemplate=\"input\">\n                                    <input pInputText type=\"text\" [(ngModel)]=\"rowData.description\">\n                                </ng-template>\n                                <ng-template pTemplate=\"output\">\n                                    {{rowData.description}}\n                                </ng-template>\n                            </p-cellEditor>\n                        </td>\n                        <td>\n                            {{rowData.modified}}\n                        </td>\n                        <td style=\"text-align:right\">\n                            <button type=\"button\" pButton icon=\"pi pi-trash\"\n                                class=\"p-button-sm p-button-rounded p-button-danger p-button-text\"\n                                (click)=\"deleteDocument(rowData)\" label=\" \"></button>\n                            <button *ngIf=\"!editing\" pButton type=\"button\" pInitEditableRow icon=\"pi pi-pencil\"\n                                (click)=\"onRowEditInit(rowData)\" class=\"p-button-sm p-button-rounded p-button-text\"\n                                label=\" \"></button>\n                            <button *ngIf=\"editing\" pButton type=\"button\" pSaveEditableRow icon=\"pi pi-check\" label=\" \"\n                                (click)=\"onRowEditSave(rowData)\"\n                                class=\"p-button-sm p-button-rounded p-button-text p-button-success p-mr-2\"></button>\n                            <button *ngIf=\"editing\" pButton type=\"button\" pCancelEditableRow icon=\"pi pi-times\"\n                                label=\" \" (click)=\"onRowEditCancel(rowData, ri)\"\n                                class=\"p-button-sm p-button-rounded p-button-text p-button-danger\"></button>\n                        </td>\n                    </tr>\n                </ng-template>\n            </p-table>\n        </p-panel>\n    </div>\n    <div class=\"p-col-12 p-lg-3 p-jc-center\">\n        <p-panel [toggleable]=\"true\" [collapsed]=\"false\" header=\"Na stiahnutie\">\n            <ul class=\"ul-links\">\n                <h4>Fakultné dokumenty</h4>\n                <li *ngFor=\"let doc of savedFacultyDocuments\">\n                    <a [href]=doc.link>{{doc.description}}</a>\n                </li>\n                <h4>Užitočné dokumenty</h4>\n                <li *ngFor=\"let doc of savedDocuments\">\n                    <a [href]=doc.link>{{doc.description}}</a>\n                </li>\n            </ul>\n        </p-panel>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Link } from \"src/app/classes/link\";\nimport { LinkService } from \"src/app/services/link.service\";\nimport { TokenService } from 'src/app/services/token.service';\n\n@Component({\n  selector: 'app-student-links',\n  templateUrl: './student-links.component.html',\n  styleUrls: ['./student-links.component.css']\n})\nexport class StudentLinksComponent implements OnInit {\n\n  links: Link[];\n  displayDialog: boolean;\n  linkForDialog: Link;\n\n  clonedLinks: {[n: number]: Link;} = {};\n\n  constructor(private linkService: LinkService, private tokenService: TokenService, private router: Router) { }\n\n  ngOnInit(): void { \n    if (this.tokenService.getToken() == null) {\n      this.router.navigate([\"login\"])\n    }\n    this.linkService.getLinks().subscribe(data => { this.links = data; });\n  }\n\n  onRowEditInit(link: Link) {\n    this.clonedLinks[link.id] = {...link};\n  }\n\n  onRowEditSave(link: Link) {\n    this.linkService.updateLink(link)\n    .subscribe( data => {\n      this.ngOnInit();\n    });\n  }\n\n  onRowEditCancel(link: Link, index: number) {\n    this.links[index] = this.clonedLinks[link.id];\n    delete this.clonedLinks[link.id];\n  }\n\n  deleteLink(link: Link) {\n    this.linkService.deleteLink(link)\n      .subscribe( data => {\n        this.ngOnInit();\n      });\n      \n  }\n\n  onLinkAdd() {\n    this.linkForDialog = { id: null, link: null, description: null, modified: null};\n    this.displayDialog = true;\n  }\n\n  saveLink() {\n    this.linkService.createLink(this.linkForDialog)\n    .subscribe(data => {\n      this.ngOnInit();\n    });\n    this.displayDialog = false;\n  }\n}\n","<div class=\"card\">\n    <p-table #linksDT [value]=\"links\" dataKey=\"id\" editMode=\"row\" [globalFilterFields]=\"['link','description']\">\n        <ng-template pTemplate=\"caption\">\n            <div class=\"p-d-flex p-ai-center\">\n                <button pButton type=\"button\" icon=\"pi pi-plus-circle\"\n                    class=\"p-button-rounded p-button-success p-button-text\" label=\" \" (click)=\"onLinkAdd()\">\n                </button>\n                <span class=\"p-input-icon-left p-ml-auto\">\n                    <i class=\"pi pi-search\"></i>\n                    <input pInputText type=\"text\" (input)=\"linksDT.filterGlobal($event.target.value, 'contains')\"\n                        placeholder=\"Hľadaj\" />\n                </span>\n            </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n            <tr>\n                <th style=\"width: 10%\"></th>\n                <th pSortableColumn=\"link\">Odkaz<p-sortIcon field=\"link\"></p-sortIcon>\n                </th>\n                <th pSortableColumn=\"description\">Popis<p-sortIcon field=\"description\"></p-sortIcon>\n                </th>\n                <th pSortableColumn=\"modified\">Upravené<p-sortIcon field=\"modified\"></p-sortIcon>\n                </th>\n                <th style=\"width: 10%\"></th>\n            </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-ri=\"rowIndex\">\n            <tr [pEditableRow]=\"rowData\">\n                <td style=\"text-align:center\">\n                    <a href=\"http://{{rowData.link}}\"><button pButton pRipple type=\"button\" icon=\"pi pi-search\"\n                            class=\"p-button-sm p-button-rounded p-button-success p-button-text\" label=\" \"></button></a>\n                </td>\n                <td>\n                    <p-cellEditor>\n                        <ng-template pTemplate=\"input\">\n                            <input pInputText type=\"text\" [(ngModel)]=\"rowData.link\">\n                        </ng-template>\n                        <ng-template pTemplate=\"output\">\n                            {{rowData.link}}\n                        </ng-template>\n                    </p-cellEditor>\n                </td>\n                <td>\n                    <p-cellEditor>\n                        <ng-template pTemplate=\"input\">\n                            <input pInputText type=\"text\" [(ngModel)]=\"rowData.description\">\n                        </ng-template>\n                        <ng-template pTemplate=\"output\">\n                            {{rowData.description}}\n                        </ng-template>\n                    </p-cellEditor>\n                </td>\n                <td>\n                    {{rowData.modified}}\n                </td>\n                <td style=\"text-align:right\">\n                    <button type=\"button\" pButton icon=\"pi pi-trash\"\n                        class=\"p-button-sm p-button-rounded p-button-danger p-button-text\" (click)=\"deleteLink(rowData)\"\n                        label=\" \"></button>\n                    <button *ngIf=\"!editing\" pButton type=\"button\" pInitEditableRow icon=\"pi pi-pencil\"\n                        (click)=\"onRowEditInit(rowData)\" class=\"p-button-sm p-button-rounded p-button-text\"\n                        label=\" \"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pSaveEditableRow icon=\"pi pi-check\" label=\" \"\n                        (click)=\"onRowEditSave(rowData)\"\n                        class=\"p-button-sm p-button-rounded p-button-text p-button-success p-mr-2\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pCancelEditableRow icon=\"pi pi-times\" label=\" \"\n                        (click)=\"onRowEditCancel(rowData, ri)\"\n                        class=\"p-button-sm p-button-rounded p-button-text p-button-danger\"></button>\n                </td>\n            </tr>\n        </ng-template>\n    </p-table>\n</div>\n<p-dialog header=\"Odkaz\" [(visible)]=\"displayDialog\" [responsive]=\"true\" showEffect=\"fade\" [modal]=\"true\">\n    <form #LinkForm=\"ngForm\" novalidate>\n        <div class=\"ui-grid ui-grid-responsive ui-fluid\" *ngIf=\"linkForDialog\">\n            <div class=\"ui-g ui-g-12 ui-g-nopad\">\n                <div class=\"ui-g-12 ui-md-3 ui-label\">\n                    <label for=\"link\">Odkaz</label>\n                </div>\n                <div class=\"ui-g-12 ui-md-9\">\n                    <input pInputText id=\"link\" name=\"link\" required [(ngModel)]=\"linkForDialog.link\" />\n                </div>\n                <div class=\"ui-g-12 ui-md-3 ui-label\">\n                    <label for=\"description\">Popis</label>\n                </div>\n                <div class=\"ui-g-12 ui-md-9\">\n                    <input pInputText id=\"description\" name=\"description\" required\n                        [(ngModel)]=\"linkForDialog.description\" />\n                </div>\n            </div>\n        </div>\n    </form>\n    <p-footer>\n        <div class=\"ui-dialog-buttonpane ui-helper-clearfix\">\n            <button type=\"submit\" pButton icon=\"pi pi-check\" (click)=\"saveLink()\" label=\"Ulož\"\n                [disabled]=\"!LinkForm.form.valid\"></button>\n        </div>\n    </p-footer>\n</p-dialog>","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RefreshService {\n  private notifyLogin = new Subject<any>();\n  private notifyLogout = new Subject<any>();\n\n  notifyLoginObservable$ = this.notifyLogin.asObservable();\n  notifyLogoutObservable$ = this.notifyLogout.asObservable();\n\n  constructor() { }\n\n  public notifyOtherLogin(data: any) {\n    if (data) {\n      this.notifyLogin.next(data);\n    }\n  }\n\n  public notifyOtherLogout(data: any) {\n    if (data) {\n      this.notifyLogout.next(data);\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { Person } from \"src/app/classes/person\";\nimport { PersonService } from \"src/app/services/person.service\";\nimport { TokenService } from 'src/app/services/token.service';\n\n@Component({\n  selector: 'app-person-data',\n  templateUrl: './person-data.component.html',\n  styleUrls: ['./person-data.component.css']\n})\nexport class PersonDataComponent implements OnInit {\n\n  personInfo: Person;\n  hasProfilePhoho: boolean;\n\n  constructor(private personService: PersonService, private tokenService: TokenService, private router: Router,\n    private sanitizer: DomSanitizer) { }\n\n  ngOnInit(): void {\n    if (this.tokenService.getToken() == null) {\n      this.router.navigate([\"login\"])\n    }\n    this.personService.getPerson().subscribe(data => {\n      this.personInfo = data;\n      this.hasProfilePhoho = data.photoByteUrl !== null;\n    });\n  }\n\n  public getSantizeUrl(url: string) {\n    return this.sanitizer.bypassSecurityTrustUrl(url);\n  }\n\n  uploadProfilePhoto(event) {\n    var uploadedPhoto;\n    for (let file of event.files) {\n      uploadedPhoto = file;\n    }\n    this.personService.uploadProfilePhoto(uploadedPhoto)\n      .then(data => {\n        this.ngOnInit();\n      });\n  }\n\n  deleteProfilePhoto() {\n    return this.personService.deleteProfilePhoto()\n      .subscribe(data => {\n        this.ngOnInit();\n      });\n  }\n}\n","<p-card>\n    <div class=\"p-grid p-jc-start\">\n        <div class=\"p-col-12 p-md-7 p-lg-7 p-jc-center\">\n            <dl>\n                <dt>Meno</dt>\n                <dd>{{personInfo?.firstname}} {{personInfo?.lastname}}</dd>\n                <dt>Adresa</dt>\n                <dd>\n                    {{personInfo?.street}} {{personInfo?.houseNumber}}, {{personInfo?.town}} {{personInfo?.zipcode}}\n                </dd>\n                <dt>Rodné číslo</dt>\n                <dd>{{personInfo?.birthNumber}}</dd>\n                <dt>Dátum narodenia</dt>\n                <dd>{{personInfo?.birthdate}}</dd>\n                <dt>Číslo ISIC karty</dt>\n                <dd>{{personInfo?.isicnumber}}</dd>\n                <dt>Číslo občianskeho preukazu</dt>\n                <dd>{{personInfo?.idcardNumber}}</dd>\n                <dt>Číslo vodičského preukazu</dt>\n                <dd>{{personInfo?.dlnumber}}</dd>\n            </dl>\n        </div>\n        <div class=\"p-col-12 p-md-5 p-lg-3 p-jc-center p-d-flex p-ai-center\">\n            <div *ngIf=\"hasProfilePhoho\">\n                <img [src]=getSantizeUrl(personInfo.photoByteUrl) width=\"200px\">\n            </div>\n            <div *ngIf=\"!hasProfilePhoho\">\n                <img src=\"assets/images/profilePhoto.jpg\" width=\"200px\">\n            </div>\n            <br>\n            <p-fileUpload mode=\"basic\" name=\"demo[]\" accept=\"image/*\" customUpload=\"true\" [auto]=\"true\"\n                (uploadHandler)=\"uploadProfilePhoto($event)\"\n                styleClass=\"p-button-sm p-button-rounded p-button-success p-button-text\">\n            </p-fileUpload>\n            <button type=\"button\" pButton icon=\"pi pi-trash\"\n                class=\"p-button-sm p-button-rounded p-button-danger p-button-text\" (click)=\"deleteProfilePhoto()\"\n                label=\" \"></button>\n        </div>\n    </div>\n</p-card>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Credentials } from 'src/app/classes/credentials';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private baseUrl = 'http://localhost:8080/auth/';\n\n  constructor(private http: HttpClient) { }\n\n  login(credentials: Credentials): Observable<any> {\n    return this.http.post(this.baseUrl + \"signin\", credentials);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n\n  constructor() { }\n\n  signOut(): void {\n    window.sessionStorage.clear();\n  }\n\n  public saveToken(token: string): void {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string {\n    return sessionStorage.getItem(TOKEN_KEY);\n  }\n\n  public saveUser(user): void {\n    window.sessionStorage.removeItem(USER_KEY);\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser(): any {\n    return JSON.parse(sessionStorage.getItem(USER_KEY));\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PersonDataComponent } from \"./components/person-data/person-data.component\";\r\nimport { StudentDocumentsComponent } from \"./components/student-documents/student-documents.component\";\r\nimport { StudentLinksComponent } from \"./components/student-links/student-links.component\";\r\nimport { LoginComponent } from \"./components/login/login.component\";\r\nimport { ContactComponent} from \"./components/contact/contact.component\";\r\nimport { AdminComponent } from './components/admin/admin.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'personData', component: PersonDataComponent },\r\n  { path: 'contacts', component: ContactComponent },\r\n  { path: 'links', component: StudentLinksComponent },\r\n  { path: 'documents', component: StudentDocumentsComponent },\r\n  { path: 'admin', component: AdminComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Globallink } from 'src/app/classes/globallink';\nimport { Persongloballink } from 'src/app/classes/persongloballink';\nimport { LinkService } from 'src/app/services/link.service';\nimport { RefreshService } from 'src/app/services/refresh.service';\n\n@Component({\n  selector: 'app-globallinks',\n  templateUrl: './globallinks.component.html',\n  styleUrls: ['./globallinks.component.css']\n})\nexport class GloballinksComponent implements OnInit {\n\n  isLoggedIn: boolean;\n  displayDialog: boolean;\n  personLinkDialog: Persongloballink;\n\n  elearningLinks: Globallink[];\n  universityLinks: Globallink[];\n  facultyLinks: Globallink[];\n  interestingLinks: Globallink[];\n\n  personElearningLinks: Persongloballink[];\n  personUniversityLinks: Persongloballink[];\n  personFacultyLinks: Persongloballink[];\n  personInterestingLinks: Persongloballink[];\n\n  private subscriptionLogin: Subscription;\n  private subscriptionLogout: Subscription;\n\n  constructor(private linkService: LinkService, private refreshService: RefreshService) {\n    this.subscriptionLogin = this.refreshService.notifyLoginObservable$.subscribe((res) => {\n      if (res.hasOwnProperty('option') && res.option === 'onSubmit') {\n        this.isLoggedIn = true;\n        this.ngOnInit();\n      }\n    });\n    this.subscriptionLogout = this.refreshService.notifyLogoutObservable$.subscribe((res) => {\n      if (res.hasOwnProperty('option') && res.option === 'onSubmit') {\n        this.isLoggedIn = false;\n        this.ngOnInit();\n      }\n    });\n   }\n\n  ngOnInit(): void {\n    this.linkService.getGlobalLinks().subscribe(data => {\n      this.elearningLinks = data.filter(c => c.globalLinkType == \"ELEARNING\");\n      this.universityLinks = data.filter(c => c.globalLinkType == \"UNIVERSITY\");\n      this.interestingLinks = data.filter(c => c.globalLinkType == \"OTHERLINK\");\n    });\n    if (this.isLoggedIn) {\n      this.linkService.getGlobalFacultyLinks().subscribe(data => { this.facultyLinks = data });\n      this.linkService.getGlobalPersonLinks().subscribe(data => {\n        this.personElearningLinks = data.filter(c => c.type == \"ELEARNING\");\n        this.personUniversityLinks = data.filter(c => c.type == \"UNIVERSITY\");\n        this.personFacultyLinks = data.filter(c => c.type == \"FACULTY\");\n        this.personInterestingLinks = data.filter(c => c.type == \"OTHERLINK\");\n      });\n    }\n  }\n\n  onLinkAdd(type: string) {\n    this.personLinkDialog = { id: null, link: null, description: null, type: type };\n    this.displayDialog = true;\n  }\n\n  savePersonLink() {\n    this.linkService.createUpdateGlobalPersonLink(this.personLinkDialog)\n      .subscribe(data => {\n        this.ngOnInit();\n      });\n    this.displayDialog = false;\n  }\n\n  deletePersonLink(persongloballink: Persongloballink) {\n    this.linkService.deleteGlobalPersonLink(persongloballink)\n      .subscribe(data => {\n        this.ngOnInit();\n      });\n  }\n\n  onEditInit(persongloballink: Persongloballink) {\n    this.personLinkDialog = {\n      id: persongloballink.id, link: persongloballink.link,\n      description: persongloballink.description, type: persongloballink.type\n    };\n    this.displayDialog = true;\n  }\n}\n","<p-panel [toggleable]=\"true\" [collapsed]=\"false\" header=\"Dôležité odkazy\">\n    <h4>Vzdelávanie</h4>\n    <button *ngIf=\"isLoggedIn\" pButton type=\"button\" icon=\"pi pi-plus-circle\"\n        class=\"p-button-rounded p-button-success p-button-text\" label=\" \" (click)=\"onLinkAdd('ELEARNING')\">\n    </button>\n    <ul class=\"ul-links\">\n        <li *ngFor=\"let l of elearningLinks\">\n            <a [href]=l.link>{{l.description}}</a>\n        </li>\n    </ul>\n    <p-table *ngIf=\"isLoggedIn\" [value]=\"personElearningLinks\" dataKey=\"id\" [autoLayout]=\"true\">\n        <ng-template pTemplate=\"body\" let-rowData>\n            <tr>\n                <td>\n                    <a [href]=rowData.link>{{rowData.description}}</a>\n                </td>\n                <td style=\"text-align:right\">\n                    <button type=\"button\" pButton icon=\"pi pi-trash\"\n                        class=\"p-button-sm p-button-rounded p-button-danger p-button-text\"\n                        (click)=\"deletePersonLink(rowData)\" label=\" \"></button>\n                    <button pButton type=\"button\" icon=\"pi pi-pencil\" (click)=\"onEditInit(rowData)\"\n                        class=\"p-button-sm p-button-rounded p-button-text\" label=\" \"></button>\n                </td>\n            </tr>\n        </ng-template>\n    </p-table>\n    <h4>Univerzita</h4>\n    <button *ngIf=\"isLoggedIn\" pButton type=\"button\" icon=\"pi pi-plus-circle\"\n        class=\"p-button-rounded p-button-success p-button-text\" label=\" \" (click)=\"onLinkAdd('UNIVERSITY')\">\n    </button>\n    <ul class=\"ul-links\">\n        <li *ngFor=\"let l of universityLinks\">\n            <a [href]=l.link>{{l.description}}</a>\n        </li>\n    </ul>\n    <p-table *ngIf=\"isLoggedIn\" [value]=\"personUniversityLinks\" dataKey=\"id\" [autoLayout]=\"true\">\n        <ng-template pTemplate=\"body\" let-rowData>\n            <tr>\n                <td>\n                    <a [href]=rowData.link>{{rowData.description}}</a>\n                </td>\n                <td style=\"text-align:right\">\n                    <button type=\"button\" pButton icon=\"pi pi-trash\"\n                        class=\"p-button-sm p-button-rounded p-button-danger p-button-text\"\n                        (click)=\"deletePersonLink(rowData)\" label=\" \"></button>\n                    <button pButton type=\"button\" icon=\"pi pi-pencil\" (click)=\"onEditInit(rowData)\"\n                        class=\"p-button-sm p-button-rounded p-button-text\" label=\" \"></button>\n                </td>\n            </tr>\n        </ng-template>\n    </p-table>\n    <div *ngIf=\"isLoggedIn\">\n        <h4>Fakulta</h4>\n        <button pButton type=\"button\" icon=\"pi pi-plus-circle\" class=\"p-button-rounded p-button-success p-button-text\"\n            label=\" \" (click)=\"onLinkAdd('FACULTY')\">\n        </button>\n        <ul class=\"ul-links\">\n            <li *ngFor=\"let l of facultyLinks\">\n                <a [href]=l.link>{{l.description}}</a>\n            </li>\n        </ul>\n        <p-table *ngIf=\"isLoggedIn\" [value]=\"personFacultyLinks\" dataKey=\"id\" [autoLayout]=\"true\">\n            <ng-template pTemplate=\"body\" let-rowData>\n                <tr>\n                    <td>\n                        <a [href]=rowData.link>{{rowData.description}}</a>\n                    </td>\n                    <td style=\"text-align:right\">\n                        <button type=\"button\" pButton icon=\"pi pi-trash\"\n                            class=\"p-button-sm p-button-rounded p-button-danger p-button-text\"\n                            (click)=\"deletePersonLink(rowData)\" label=\" \"></button>\n                        <button pButton type=\"button\" icon=\"pi pi-pencil\" (click)=\"onEditInit(rowData)\"\n                            class=\"p-button-sm p-button-rounded p-button-text\" label=\" \"></button>\n                    </td>\n                </tr>\n            </ng-template>\n        </p-table>\n    </div>\n    <h4>Zaujímavé linky</h4>\n    <button *ngIf=\"isLoggedIn\" pButton type=\"button\" icon=\"pi pi-plus-circle\"\n        class=\"p-button-rounded p-button-success p-button-text\" label=\" \" (click)=\"onLinkAdd('INTERESTINGLINK')\">\n    </button>\n    <ul class=\"ul-links\">\n        <li *ngFor=\"let l of interestingLinks\">\n            <a [href]=l.link>{{l.description}}</a>\n        </li>\n    </ul>\n    <p-table *ngIf=\"isLoggedIn\" [value]=\"personInterestingLinks\" dataKey=\"id\" [autoLayout]=\"true\">\n        <ng-template pTemplate=\"body\" let-rowData>\n            <tr>\n                <td>\n                    <a [href]=rowData.link>{{rowData.description}}</a>\n                </td>\n                <td style=\"text-align:right\">\n                    <button type=\"button\" pButton icon=\"pi pi-trash\"\n                        class=\"p-button-sm p-button-rounded p-button-danger p-button-text\"\n                        (click)=\"deletePersonLink(rowData)\" label=\" \"></button>\n                    <button pButton type=\"button\" icon=\"pi pi-pencil\" (click)=\"onEditInit(rowData)\"\n                        class=\"p-button-sm p-button-rounded p-button-text\" label=\" \"></button>\n                </td>\n            </tr>\n        </ng-template>\n    </p-table>\n</p-panel>\n<p-dialog [(visible)]=\"displayDialog\" [responsive]=\"true\" showEffect=\"fade\" [modal]=\"true\">\n    <form #LinkForm=\"ngForm\" novalidate>\n        <div class=\"ui-grid ui-grid-responsive ui-fluid\" *ngIf=\"personLinkDialog\">\n            <div class=\"ui-g ui-g-12 ui-g-nopad\">\n                <div class=\"ui-g-12 ui-md-3 ui-label\">\n                    <label for=\"link\">Odkaz</label>\n                </div>\n                <div class=\"ui-g-12 ui-md-9\">\n                    <input pInputText id=\"link\" name=\"link\" required [(ngModel)]=\"personLinkDialog.link\" />\n                </div>\n                <div class=\"ui-g-12 ui-md-3 ui-label\">\n                    <label for=\"description\">Popis</label>\n                </div>\n                <div class=\"ui-g-12 ui-md-9\">\n                    <input pInputText id=\"description\" name=\"description\" required\n                        [(ngModel)]=\"personLinkDialog.description\" />\n                </div>\n            </div>\n        </div>\n    </form>\n    <p-footer>\n        <div class=\"ui-dialog-buttonpane ui-helper-clearfix\">\n            <button type=\"submit\" pButton icon=\"pi pi-check\" (click)=\"savePersonLink()\" label=\"Ulož\"\n                [disabled]=\"!LinkForm.form.valid\"></button>\n        </div>\n    </p-footer>\n</p-dialog>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}